import{k as s,l as c}from"./app.14b72f3d.js";const n=s.create({baseURL:"/api/",withCredentials:!0}),r={getAllModel:async function(e){return await n.get("/"+e)},getModelById:async function(e,t){return await n.get(`/${e}/${t.id}`)},storeModel:async function(e,t){return await n.post(`/${e}`,t)},updateModelById:async function(e,t){return await n.put(`/${e}/${t.id}`,t)},deleteModelById:async function(e,t){return await n.delete(`/${e}/${t}`)},getRangeModel:async function(e,t){return await n.post(`/${e}`,t)}},i=c("ApiStore",{actions:{getRangeModel:async function(e,t){try{const a=await r.getRangeModel(e,t),o=a.data;if(a.status==200)return o}catch(a){throw{error:a}}},getAllModel:async function(e){try{const t=await r.getAllModel(e);console.log("test");const a=t.data;if(t.status==200)return a}catch(t){throw{error:t}}},getModelById:async function(e,t){try{return(await r.getModelById(e,t)).data}catch(a){throw{error:a}}},storeModel:async function(e,t){try{const a=await r.storeModel(e,t),o=a.data;if(a.status==200)return o}catch(a){if(a.response.status==401)throw authStore.logout(),{error:"Invalid Credentials"}}},editModel:async function(e,t){try{const a=await r.updateModelById(e,t),o=a.data;if(a.status==200)return o}catch(a){throw{error:a}}},deleteModel:async function(e,t){try{await r.deleteModelById(e,t)}catch(a){if(a.response.status==401)throw authStore.logout(),{error:"Invalid Credentials"}}}}});export{i as u};
